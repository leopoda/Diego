<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>${project.artifactId}</name>
  <groupId>td.tendcloud</groupId>
  <artifactId>locate</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.version>2.10.4</scala.version>
    <scala.compat.version>2.10</scala.compat.version>
    <spark.version>1.6.0</spark.version>
    <hadoop.version>2.7.1</hadoop.version>
  </properties>

  <repositories>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
	<dependency>
		<groupId>org.scala-lang</groupId>
		<artifactId>scala-compiler</artifactId>
		<version>${scala.version}</version>
      	<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.scala-lang</groupId>
		<artifactId>scala-reflect</artifactId>
		<version>${scala.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
	  <groupId>org.apache.spark</groupId>
	  <artifactId>spark-core_2.11</artifactId>
	  <version>${spark.version}</version>
	  <scope>provided</scope>
	</dependency>
    <dependency>
	  <groupId>org.apache.spark</groupId>
	  <artifactId>spark-sql_2.10</artifactId>
	  <version>${spark.version}</version>
	  <scope>provided</scope>
    </dependency>
    <dependency>
	  <groupId>org.apache.spark</groupId>
	  <artifactId>spark-streaming_2.10</artifactId>
	  <version>${spark.version}</version>
	  <scope>provided</scope>
    </dependency>
    <dependency>
	  <groupId>org.apache.spark</groupId>
	  <artifactId>spark-streaming-kafka_2.10</artifactId>
	  <version>${spark.version}</version>
	  <scope>provided</scope>
    </dependency>

	<dependency>
		<groupId>org.apache.spark</groupId>
		<artifactId>spark-hive_2.10</artifactId>
		<version>${spark.version}</version>
		<scope>provided</scope>
	</dependency>
    
<!--     <dependency> -->
<!--       <groupId>joda-time</groupId> -->
<!--       <artifactId>joda-time</artifactId> -->
<!--       <version>2.7</version> -->
<!--     </dependency> -->

	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.4</version>
	</dependency>

<!-- 	<dependency> -->
<!-- 		<groupId>com.typesafe.play</groupId> -->
<!-- 		<artifactId>play-json_2.10</artifactId> -->
<!-- 		<version>2.4.6</version> -->
<!-- 	</dependency> -->

	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>2.6.4</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.6.4</version>
	</dependency>

<!-- 	<dependency> -->
<!-- 		<groupId>org.xerial</groupId> -->
<!-- 		<artifactId>sqlite-jdbc</artifactId> -->
<!-- 		<version>3.8.11.2</version> -->
<!-- 	</dependency> -->

<!-- 	<dependency> -->
<!-- 		<groupId>org.springframework</groupId> -->
<!-- 		<artifactId>spring-context</artifactId> -->
<!-- 		<version>4.2.5.RELEASE</version> -->
<!-- 	</dependency> -->

<!-- 	<dependency> -->
<!-- 		<groupId>org.springframework</groupId> -->
<!-- 		<artifactId>spring-jdbc</artifactId> -->
<!-- 		<version>4.2.5.RELEASE</version> -->
<!-- 	</dependency> -->

	<dependency>
		<groupId>com.databricks</groupId>
		<artifactId>spark-csv_2.10</artifactId>
		<version>1.4.0</version>
	</dependency>
	
		<dependency>
		<groupId>cn.talkingdata.util</groupId>
		<artifactId>util-tools</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</dependency>
    
<!--     <dependency> -->
<!-- 	  <groupId>org.apache.spark</groupId> -->
<!-- 	  <artifactId>spark-hive_2.10</artifactId> -->
<!-- 	  <version>${spark.version}</version> -->
<!-- 	  <scope>provided</scope> -->
<!--     </dependency> -->
<!--     <dependency> -->
<!--       <groupId>org.apache.hadoop</groupId> -->
<!--       <artifactId>hadoop-hdfs</artifactId> -->
<!--       <version>${hadoop.version}</version> -->
<!--       <scope>provided</scope> -->
<!--     </dependency> -->

    <!-- Test -->
<!--     <dependency> -->
<!--       <groupId>junit</groupId> -->
<!--       <artifactId>junit</artifactId> -->
<!--       <version>4.11</version> -->
<!--       <scope>test</scope> -->
<!--     </dependency> -->
<!--     <dependency> -->
<!--       <groupId>org.specs2</groupId> -->
<!--       <artifactId>specs2-core_${scala.compat.version}</artifactId> -->
<!--       <version>2.4.16</version> -->
<!--       <scope>test</scope> -->
<!--     </dependency> -->
<!--     <dependency> -->
<!--       <groupId>org.scalatest</groupId> -->
<!--       <artifactId>scalatest_${scala.compat.version}</artifactId> -->
<!--       <version>2.2.4</version> -->
<!--       <scope>test</scope> -->
<!--     </dependency> -->
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
<!--     <testSourceDirectory>src/test/scala</testSourceDirectory> -->
    <plugins>
<!--       <plugin> -->
<!--         <groupId>net.alchim31.maven</groupId> -->
<!--         <artifactId>scala-maven-plugin</artifactId> -->
<!--         <version>3.2.0</version> -->
<!--         <executions> -->
<!--           <execution> -->
<!--             <goals> -->
<!--               <goal>compile</goal> -->
<!--               <goal>testCompile</goal> -->
<!--             </goals> -->
<!--             <configuration> -->
<!--               <args> -->
<!--                 <arg>-make:transitive</arg> -->
<!--                 <arg>-dependencyfile</arg> -->
<!--                 <arg>${project.build.directory}/.scala_dependencies</arg> -->
<!--               </args> -->
<!--             </configuration> -->
<!--           </execution> -->
<!--         </executions> -->
<!--       </plugin> -->




	<plugin>
		<groupId>org.scala-tools</groupId>
		<artifactId>maven-scala-plugin</artifactId>
		<version>2.15.2</version>
		<configuration>
			<sourceDir>src/main/scala</sourceDir>
			<charset>UTF-8</charset>
		</configuration>
		<executions>
			<execution>
				<goals>
					<goal>compile</goal>
					<goal>testCompile</goal>
				</goals>
			</execution>
		</executions>

	</plugin>

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
		<version>3.1</version>
		<configuration>
			<sourceDir>src/main/java</sourceDir>
			<charset>UTF-8</charset>
			<source>1.7</source>
			<target>1.7</target>
		</configuration>
	</plugin>  
      
<!--       <plugin> -->
<!--         <groupId>org.apache.maven.plugins</groupId> -->
<!--         <artifactId>maven-surefire-plugin</artifactId> -->
<!--         <version>2.18.1</version> -->
<!--         <configuration> -->
<!--           <useFile>false</useFile> -->
<!--           <disableXmlReport>true</disableXmlReport> -->
<!--           If you have classpath issue like NoDefClassError,... -->
<!--           useManifestOnlyJar>false</useManifestOnlyJar -->
<!--           <includes> -->
<!--             <include>**/*Test.*</include> -->
<!--             <include>**/*Suite.*</include> -->
<!--           </includes> -->
<!--         </configuration> -->
<!--       </plugin> -->
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-shade-plugin</artifactId>
		<version>2.3</version>
		<executions>
			<execution>
				<phase>package</phase>
				<goals>
					<goal>shade</goal>
				</goals>
			</execution>
		</executions>
	</plugin>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-resources-plugin</artifactId>  
        <version>2.5</version>  
        <executions>
            <execution>
                <id>copy-resources</id>  
                <phase>compile</phase>  
                <goals>
                    <goal>copy-resources</goal>  
                </goals>
                <configuration>
                    <encoding>UTF-8</encoding>  
                    <outputDirectory>${project.build.directory}/classes</outputDirectory>  
                    <resources>
                        <resource>
                            <directory>resources</directory>  
                            <includes>
                                <include>*.json</include>
                            </includes>
                        </resource>
                    </resources>
                </configuration>
            </execution> 
        </executions>
    </plugin>
    </plugins>
  </build>
</project>
